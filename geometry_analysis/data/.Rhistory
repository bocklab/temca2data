nl = get_skids_by_anno(glom) %>% intersect(right_pns) %>% read.neurons.catmaid(conn=fafb_conn)
nl[, 'glom'] = glom
pns = c(pns, nl)
}
# need CATMAID credentials
get_skids_by_anno <- function(anno) {
paste0("^", anno, "$") %>%
catmaid_query_by_annotation(type="neuron", conn=fafb_conn) %>%
.$skid
}
unigloms = catmaid_query_by_annotation("^uniglom$",  type="annotation", conn=fafb_conn)$name
right_pns = catmaid_query_by_annotation("^right_calyx_PN$",  type="neuron", conn=fafb_conn)$skid
pns = list()
for (glom in unigloms[1:3]) {
nl = get_skids_by_anno(glom) %>% intersect(right_pns) %>% read.neurons.catmaid(conn=fafb_conn)
nl[, 'glom'] = glom
pns = c(pns, nl)
}
# source("~/myscripts/bocklab_git/bocklab/zhihao/r/scripts/170213-concentric_territoriesz.R")
# general packages
library(nat)
library(catmaid)
library(elmr)
library(magrittr)
library(igraph)
library(rgl)
# library(grid)
library(dplyr)
library(ggplot2)
# library(reshape2)
# neuro
# library(caTools)
library(nat.templatebrains)
library(nat.nblast)
library(mushroom)
library(dendroextras)
library(dendextend)
# need CATMAID credentials
get_skids_by_anno <- function(anno) {
paste0("^", anno, "$") %>%
catmaid_query_by_annotation(type="neuron", conn=fafb_conn) %>%
.$skid
}
unigloms = catmaid_query_by_annotation("^uniglom$",  type="annotation", conn=fafb_conn)$name
right_pns = catmaid_query_by_annotation("^right_calyx_PN$",  type="neuron", conn=fafb_conn)$skid
pns = list()
for (glom in unigloms[1:3]) {
nl = get_skids_by_anno(glom) %>% intersect(right_pns) %>% read.neurons.catmaid(conn=fafb_conn)
nl[, 'glom'] = glom
pns = c(pns, nl)
}
source('~/myscripts/credentials/catmaid_fafb_login_v13.R', echo=TRUE)
# need CATMAID credentials
get_skids_by_anno <- function(anno) {
paste0("^", anno, "$") %>%
catmaid_query_by_annotation(type="neuron", conn=fafb_conn) %>%
.$skid
}
unigloms = catmaid_query_by_annotation("^uniglom$",  type="annotation", conn=fafb_conn)$name
right_pns = catmaid_query_by_annotation("^right_calyx_PN$",  type="neuron", conn=fafb_conn)$skid
pns = list()
for (glom in unigloms[1:3]) {
nl = get_skids_by_anno(glom) %>% intersect(right_pns) %>% read.neurons.catmaid(conn=fafb_conn)
nl[, 'glom'] = glom
pns = c(pns, nl)
}
pn_list = do.call(c, pns)
pn_list[,]
is.neuronlist(pns)
plot3d(pns)
# need CATMAID credentials
get_skids_by_anno <- function(anno) {
paste0("^", anno, "$") %>%
catmaid_query_by_annotation(type="neuron", conn=fafb_conn) %>%
.$skid
}
unigloms = catmaid_query_by_annotation("^uniglom$",  type="annotation", conn=fafb_conn)$name
right_pns = catmaid_query_by_annotation("^right_calyx_PN$",  type="neuron", conn=fafb_conn)$skid
pns = list()
for (glom in unigloms[1:3]) {
nl = get_skids_by_anno(glom) %>% intersect(right_pns) %>% read.neurons.catmaid(conn=fafb_conn)
nl[, 'glom'] = glom
pns = c(pns, nl)
}
source('~/myscripts/credentials/catmaid_fafb_login_v13.R', echo=TRUE)
# need CATMAID credentials
get_skids_by_anno <- function(anno) {
paste0("^", anno, "$") %>%
catmaid_query_by_annotation(type="neuron", conn=fafb_conn) %>%
.$skid
}
unigloms = catmaid_query_by_annotation("^uniglom$",  type="annotation", conn=fafb_conn)$name
right_pns = catmaid_query_by_annotation("^right_calyx_PN$",  type="neuron", conn=fafb_conn)$skid
pns = list()
for (glom in unigloms[1:3]) {
nl = get_skids_by_anno(glom) %>% intersect(right_pns) %>% read.neurons.catmaid(conn=fafb_conn)
nl[, 'glom'] = glom
pns = c(pns, nl)
}
length(pns)
pn_list = do.call(c, pns)
?c.neuronlist
# need CATMAID credentials
right_pns = catmaid_query_by_annotation("^right_calyx_PN$",  type="neuron", conn=fafb_conn)$skid
get_right_PNs <- function(glom) {
# given the annotation of a glomerulus, return a right calyx PN neuronlist of that glomerulus
paste0("^", glom, "$") %>%
catmaid_query_by_annotation(type="neuron", conn=fafb_conn) %>%
.$skid %>%
intersect(right_pns) %>%
read.neurons.catmaid(conn=fafb_conn)
}
unigloms = catmaid_query_by_annotation("^uniglom$",  type="annotation", conn=fafb_conn)$name
nl = lapply(unigloms, get_right_PNs)
nls = do.call(c, nl)
# need CATMAID credentials
right_pns = catmaid_query_by_annotation("^right_calyx_PN$",  type="neuron", conn=fafb_conn)$skid
get_right_PNs <- function(glom) {
# given the annotation of a glomerulus, return a right calyx PN neuronlist of that glomerulus
paste0("^", glom, "$") %>%
catmaid_query_by_annotation(type="neuron", conn=fafb_conn) %>%
.$skid %>%
intersect(right_pns) %>%
read.neurons.catmaid(conn=fafb_conn)
}
unigloms = catmaid_query_by_annotation("^uniglom$",  type="annotation", conn=fafb_conn)$name
nl = lapply(unigloms, get_right_PNs)
length(nl)
nls = do.call(c, nl)
nl[1]
nl[1] %>% length()
t1 = unlist(nl)
rm(t1)
?unlist
t1 = unlist(nl, recursive=FALSE)
is.neuronlist(t1)
?sapply
# source("~/myscripts/bocklab_git/bocklab/zhihao/r/scripts/170213-concentric_territoriesz.R")
# general packages
library(nat)
library(catmaid)
library(elmr)
library(magrittr)
library(igraph)
library(rgl)
# library(grid)
library(dplyr)
library(ggplot2)
# library(reshape2)
# neuro
# library(caTools)
library(nat.templatebrains)
library(nat.nblast)
library(mushroom)
library(dendroextras)
library(dendextend)
pn_skids = catmaid_query_by_annotation("^PN$",  type="neuron", conn=fafb_conn)$skid
unigloms = catmaid_query_by_annotation("^uniglom$",  type="annotation", conn=fafb_conn)$name
pndps = fetch_mb_neurons(unigloms, conn=fafb_conn, "glom", ref = NULL) %>%
.[names(.) %>% as.integer %in% pn_skids] %>%
dotprops(k=5, resample=1e3) %>%
xform_brain(sample=FAFB13, ref=JFRC2)
pndps[,'glom'] = gsub("glomerulus ", "", pndps[,'glom'])
pns[,'glom'][1]
pns[,'glom']
pns[,'glom'][[1]]
pns[,'glom']
# need CATMAID credentials
# name it fafb_conn here
right_pns = catmaid_query_by_annotation("^right_calyx_PN$",  type="neuron", conn=fafb_conn)$skid
get_right_PNs <- function(glom) {
# given the annotation of a glomerulus, return a right calyx PN neuronlist of that glomerulus
nl = paste0("^", glom, "$") %>%
catmaid_query_by_annotation(type="neuron", conn=fafb_conn) %>%
.$skid %>%
intersect(right_pns) %>%
read.neurons.catmaid(conn=fafb_conn)
nl[, 'glom'] = glom
nl
}
unigloms = catmaid_query_by_annotation("^uniglom$",  type="annotation", conn=fafb_conn)$name
pns = lapply(unigloms, get_right_PNs) %>% unlist(recursive=FALSE)
pns[,'glom']
pns[,] %>% names
nl[,]
?`data.frame<-.neuronlist`
t1 = as.neuronlist(pns)
t1[,]
names(pns)
plot3d(pns)
pns[[1]] %>% class
t2 = sapply(pns, class)
t2
?c.neuronlist
pns[[1]] %>% class
pns[[1]]
pns[[1]] %>% names
pns[1]
pns[1] %>% attributes
pns[1] %>% attributes()
pn_skids = catmaid_query_by_annotation("^right_calyx_PN$",  type="neuron", conn=fafb_conn)$skid
pn_skids
load("~/myscripts/data_results/170331-EMvsLM_calyx_tightness_Fig5_FAFB2017/lm_coll_subset_170331.rda")
load("/Users/zhengz11/myscripts/data_results/170331-EMvsLM_calyx_tightness_Fig5_FAFB2017/fb_coll_170403.rda")
length(fb_coll_170403)
names(fb_coll_170403)
fb_coll_170403[,'glom']
fb_coll_170403[,'glomerulus']
fb_coll_170403[,] %>% names
library(magrittr)
fb_coll_170403[,] %>% names
fb_coll_170403[,] %>% names
data.frame(fb_coll_170403)
(fb_coll_170403[,])
plot3d(fb_coll_170403)
library(nat)
plot3d(fb_coll_170403)
library(elmr)
library(flycircuit)
library(nat)
library(catmaid)
library(mushroom)
library(xlsx)
library(magrittr)
library(reshape2)
library(dplyr)
library(ggplot2)
fetchn_w_annotation <- function(anno, conn, anno_type, intersect_skids, ...) {
nl = catmaid::read.neurons.catmaid(paste0("annotation:^", anno, "$"), conn=conn, ...)
if (!is.null(intersect_skids)) nl = nl[names(nl) %>% as.integer %in% intersect_skids]
nl[, anno_type] = anno
nl
}
fetch_neurons <- function(annos, conn, anno_type='annos', ref="FCWB", border_tag=NULL, intersect_skids = NULL, ...) {
nl = do.call(c, lapply(annos, fetchn_w_annotation, conn, anno_type, intersect_skids, ...))
if (anyDuplicated(attr(nl, 'df')$skid) != 0)  message("More than 1 annotations on a neuron!")
if (!is.null(ref)) nl = nlapply(nl, xform_brain, sample="FAFB13", reference=ref)
if (!is.null(border_tag)) nl = nlapply(nl, function(n) segment_arbor(n, border_tag, n$skid))
nl
}
smooth_spikes <- function(n, sects) {
ng = as.ngraph(n)
ns = row.names(n$d[n$d$Z %in% (sects*35),]) %>% as.numeric
for (node in ns) {
outg = n$d[ego(ng, 1, node, "out") %>% unlist %>% setdiff(node),] %>% xyzmatrix
inc = n$d[ego(ng, 1, node, "in") %>% unlist %>% setdiff(node),] %>% xyzmatrix
if (nrow(inc)==0 && nrow(outg)>0) xyz_c = outg[1,]-1
if (nrow(outg)==0 && nrow(inc)>0) xyz_c = inc[1,]-1
if (nrow(inc)>0 && nrow(outg)>0) xyz_c = rbind(inc[1,], outg[1,]) %>% colMeans
# inc_xyz = inc[nabor::knn(inc, outg, k=1)$nn.idx[[1]],]
# outg_xyz = outg[nabor::knn(outg, inc, k=1)$nn.idx[[1]],]
n$d[node, c("X", "Y", "Z")] = xyz_c
}
n
}
get_nndist_sd <- function(n1, n2, neuron1, neuron2) {
# given 2 neurons, n1 and n2,
# calculate the minimal of mean distance and sd between them
min_mean = min(mean(get_nndist(n1, n2)), mean(get_nndist(n2, n1)))
min_sd = min(sd(get_nndist(n1, n2)), sd(get_nndist(n2, n1)))
list('dist_mean'=min_mean, 'dist_sd'=min_sd, 'neuron1'=neuron1, 'neuron2'=neuron2)
}
get_dist_summary <- function(nl) {
# given a neuronlist,
# return all pair-wise combinations of neurons in the neuronlist,
# and calculate mean_dist, sd
combn(nl, 2, simplify=FALSE) %>%
lapply(function(x) get_nndist_sd(x[[1]], x[[2]], names(x[1]), names(x[2])))
}
get_nblast_score <- function(nl) {
nl = dotprops(nl, k=2)
combn(nl, 2, simplify=FALSE) %>%
lapply(function(x) list("nblast_mean_score"=mean(nblast(x[[1]], x[[2]], normalised=TRUE),
nblast(x[[2]], x[[1]], normalised=TRUE)),
'neuron1'=names(x[1]), 'neuron2'=names(x[2])))
}
# a list with each column as an element
# columns: 'dist_mean', 'dist_sd', 'type', 'groups', 'neuron1', neuron2',
summarize_pair_wise <- function(nl, glom_list, group_name, FUN=get_dist_summary) {
# given a neuron list, glom_list,
# calculate mean distances (and sd) for each pair
# summarize results into a table
result = list()
for (i in seq_along(glom_list)) {
g  = glom_list[[i]]
result[[i]] = subset(nl, std_glom==g) %>%
FUN %>%
lapply(as.data.frame) %>%
{do.call(rbind, .)} %>%
mutate(type=glom_list[[i]], groups=group_name)
}
do.call(rbind, result)
}
rank_glom_by_diff <- function(data_tbl) {
dist_mean_rank = group_by(data_tbl, type, groups) %>% summarize(mean_summary=mean(dist_mean))
glom_dist = c()
temp_gloms = filter(data_tbl, groups=='LM')$type %>% unique %>% as.character
for (i in seq_along(temp_gloms)) {
glom = temp_gloms[[i]]
glom_dist[glom] = filter(dist_mean_rank, type==glom) %>%
{filter(., groups=='LM')$mean_summary - filter(., groups=='FAFB')$mean_summary}
}
sort(glom_dist, decreasing=TRUE) %>% names
}
rank_glom_by_nblast <- function(data_tbl) {
dist_mean_rank = group_by(data_tbl, type, groups) %>% summarize(mean_summary=mean(nblast_mean_score))
glom_dist = c()
temp_gloms = filter(data_tbl, groups=='LM')$type %>% unique %>% as.character
for (i in seq_along(temp_gloms)) {
glom = temp_gloms[[i]]
glom_dist[glom] = filter(dist_mean_rank, type==glom) %>%
{filter(., groups=='FAFB')$mean_summary - filter(., groups=='LM')$mean_summary}
}
sort(glom_dist, decreasing=TRUE) %>% names
}
my_pal <- function(n) {
if (n<=3) {
pal=rainbow(3)[c(1,3,2)[1:n]]
} else if (n<=6) {
pal=c(rainbow(3), rainbow(4)[1:(n-3)])
} else {
pal=c(rainbow(3), rainbow(n-3))
}
pal
}
# calyx bounding box in FCWB space for subset---------
bb_rca = boundingbox(subset(FCWBNP.surf, "MB_CA_R"))
bb_rca[1,1] = 179
in_bbox<-function(b) {
function(x, y=NULL, z=NULL)
with(xyz.coords(x,y,z),
b[1,1]<=x & x<=b[2,1] & b[1,2]<=y & y<=b[2,2] & b[1,3]<=z & z<=b[2,3])
}
in_fc_rca = in_bbox(bb_rca)
get_calyx_collaterals <- function(nl, rs=1, spine_iv=TRUE) {
nlapply(nl, resample, rs) %>%
nlapply(spine, UseStartPoint=TRUE, invert=spine_iv, rval="neuron") %>%
nlapply(subset, in_fc_rca)
}
get_calyx_skeletons <- function(nl, rs=1) {
nlapply(nl, resample, rs) %>%
nlapply(subset, in_fc_rca)
}
# load glom collections and functions--------
fb_gloms_extra = c("glomerulus DA3", "glomerulus V", "glomerulus VA3",
"glomerulus VA5", "glomerulus VL1")
# load glom collections and functions--------
fb_gloms = c("glomerulus D", "glomerulus DA1", "glomerulus DA2",
"glomerulus DC2", "glomerulus DC3", "glomerulus DL1",
"glomerulus DL2d", "glomerulus DL2v", "glomerulus DL3",
"glomerulus DM2", "glomerulus DM5", "glomerulus DM6",
"glomerulus VA1d", "glomerulus VA1v", "glomerulus VA7m",
"glomerulus VC3m", "glomerulus VC4",  "glomerulus VM1",
"glomerulus VM2", "glomerulus VM3", "glomerulus VM5d",
"glomerulus VM5v", "glomerulus VM7d", "glomerulus VM7v")
# VM7 is VM7d, VA1lm is VA1v
fc_gloms = c("DA1", "DA2", "DL1",
"DL2d", "DL2v", "DL3",
"DM5", "DM6", "VA1d",
"VA1lm", "VA7m", "VC3m",
"VC4", "VM1", "VM2",
"VM5d", "VM5v", "VM7")
# VM7 is VM7d, 1 is VM7v, VA1lm is VA1v
gj_gloms = c("D", "DA1", "DC2",
"DC3", "DL1", "DL3",
"DM2", "DM5", "DM6",
"VA1d", "VA1lm", "VA7m",
"VM2", "VM3", "VM7",
"1")
# setup common glom names for all 3 glom name sources (Jefferis 2007, Flycircuit, FAFB)
all_fb_gloms = c(fb_gloms, fb_gloms_extra)
glom_data = gsub("glomerulus ", "", all_fb_gloms) %>% setNames(all_fb_gloms)
fc_t1 = gsub("VA1lm", "VA1v", fc_gloms) %>% {gsub("VM7", "VM7d", .)} %>% setNames(fc_gloms)
glom_data = c(glom_data, fc_t1, c("1"="VM7v"))
glom_data = setdiff(c(fc_gloms, gj_gloms), names(glom_data)) %>% {setNames(., .)} %>% c(glom_data)
fb_std_gloms = glom_data[all_fb_gloms] %>% unname
fc_std_gloms = glom_data[fc_gloms] %>% unname
gj_std_gloms = glom_data[gj_gloms] %>% unname
fb_ca_skln = xform_brain(uPN, sample=FAFB13, reference=FCWB) %>%
mirror_brain(FCWB) %>%
get_calyx_skeletons
fb_ca_skln[,'std_glom']=glom_data[fb_ca_skln[,'glomerulus']]
uPN = subset(pns, glomerulus != "olfactory_multi_glom_PN")
load("~/myscripts/FAFB2017_paper/data/pns.rda")
load("~/myscripts/FAFB2017_paper/data/pns.RData")
uPN = subset(pns, glomerulus != "olfactory_multi_glom_PN")
fb_ca_skln = xform_brain(uPN, sample=FAFB13, reference=FCWB) %>%
mirror_brain(FCWB) %>%
get_calyx_skeletons
load("~/myscripts/FAFB2017_paper/data/fb_gj_ca_skln_170403.rda")
fb_ca_skln = fb_ca_skln_170403
gj_ca_skln = gj_ca_skln_170403
plot_glom <- function(nl, p_fix="", to_save=TRUE, ...) {
# supply ylim=c(24e4, 2e5) if needed
if (to_save) pdf(paste0(format(Sys.Date(), format="%y%m%d"), "-2dSk_", p_fix, '.pdf'))
plot(nl, WithNode=FALSE, xlab="", ylab="", axes=FALSE, lwd=1, col=my_pal(length(nl)), ...)
if (to_save) dev.off()
}
gj_tbl = summarize_pair_wise(gj_ca_skln, gj_std_gloms, 'Jefferis07', get_dist_summary)
getwd()
setwd("~/myscripts/FAFB2017_paper/data")
results = gj_tbl
fb_nl = fb_ca_skln
gj_nl = gj_ca_skln
# pdf("170403-EMvsLMvsMedian_first8.pdf", width = 8, height = 12)
pdf("170403-EMvsLMvsMedian_last8.pdf", width = 8, height = 12)
n_row = 8
par(mfrow = c(n_row, 3), mar=c(0,2.2,2,0), oma=c(0,2.2,2,0))
gloms = gj_glom_rank[9:16]
for (i in seq_along(gloms))  {
glom = gloms[[i]]
subset(fb_nl, std_glom==glom) %>%
plot_glom(to_save=FALSE)
mtext(glom, side=2, line=2, outer=TRUE, adj = 0, at=(1 - 1/16 - (1/8)*(i-1)), las=2)
filter(results, type==glom, groups=='Jefferis07') %>%
.[which.median(.$dist_mean), c("neuron1", "neuron2")] %>%
sapply(as.character) %>%
{plot_glom(gj_nl[.], to_save=FALSE)}
subset(gj_nl, std_glom==glom) %>%
plot_glom(to_save=FALSE)
}
mtext("EM", side=3, outer=TRUE, at=1/6)
mtext("median distance LM", side=3, outer=TRUE, at=1/6 + 1/3)
mtext("all LM", side=3, outer=TRUE, at=1/6 + 2/3)
dev.off()
load("~/myscripts/data_results/170331-EMvsLM_calyx_tightness_Fig5_FAFB2017/fc_gj_ca_coll_170223.rda")
all_glom_rank = c("DL2d", "DA2", "VA1v", "VM7v", "DL1", "DM2",
"VM7d", "DM6", "DM5", "VM5d", "DA1", "VA7m", "VA1d", "D",
"DC3", "VC4", "DL2v", "VM2", "VM3", "DC2", "VM5v", "VM1",
"DL3", "VC3m", "DA3", "V", "VA3", "VA5", "VL1")
gj_glom_rank = all_glom_rank[all_glom_rank %in% unique(gj_coll_0223[,'std_glom'])]
results = gj_tbl
fb_nl = fb_ca_skln
gj_nl = gj_ca_skln
# pdf("170403-EMvsLMvsMedian_first8.pdf", width = 8, height = 12)
pdf("170403-EMvsLMvsMedian_last8.pdf", width = 8, height = 12)
n_row = 8
par(mfrow = c(n_row, 3), mar=c(0,2.2,2,0), oma=c(0,2.2,2,0))
gloms = gj_glom_rank[9:16]
for (i in seq_along(gloms))  {
glom = gloms[[i]]
subset(fb_nl, std_glom==glom) %>%
plot_glom(to_save=FALSE)
mtext(glom, side=2, line=2, outer=TRUE, adj = 0, at=(1 - 1/16 - (1/8)*(i-1)), las=2)
filter(results, type==glom, groups=='Jefferis07') %>%
.[which.median(.$dist_mean), c("neuron1", "neuron2")] %>%
sapply(as.character) %>%
{plot_glom(gj_nl[.], to_save=FALSE)}
subset(gj_nl, std_glom==glom) %>%
plot_glom(to_save=FALSE)
}
mtext("EM", side=3, outer=TRUE, at=1/6)
mtext("median distance LM", side=3, outer=TRUE, at=1/6 + 1/3)
mtext("all LM", side=3, outer=TRUE, at=1/6 + 2/3)
dev.off()
which.median <- function(x) which.min(abs(x - median(x)))
results = gj_tbl
fb_nl = fb_ca_skln
gj_nl = gj_ca_skln
# pdf("170403-EMvsLMvsMedian_first8.pdf", width = 8, height = 12)
pdf("170403-EMvsLMvsMedian_last8.pdf", width = 8, height = 12)
n_row = 8
par(mfrow = c(n_row, 3), mar=c(0,2.2,2,0), oma=c(0,2.2,2,0))
gloms = gj_glom_rank[9:16]
for (i in seq_along(gloms))  {
glom = gloms[[i]]
subset(fb_nl, std_glom==glom) %>%
plot_glom(to_save=FALSE)
mtext(glom, side=2, line=2, outer=TRUE, adj = 0, at=(1 - 1/16 - (1/8)*(i-1)), las=2)
filter(results, type==glom, groups=='Jefferis07') %>%
.[which.median(.$dist_mean), c("neuron1", "neuron2")] %>%
sapply(as.character) %>%
{plot_glom(gj_nl[.], to_save=FALSE)}
subset(gj_nl, std_glom==glom) %>%
plot_glom(to_save=FALSE)
}
mtext("EM", side=3, outer=TRUE, at=1/6)
mtext("median distance LM", side=3, outer=TRUE, at=1/6 + 1/3)
mtext("all LM", side=3, outer=TRUE, at=1/6 + 2/3)
dev.off()
sheet2 = read.xlsx("/Users/zhengz11/myscripts/FAFB2017_paper/data/PNcountsPerGlom.xlsx", 1) %>%
.[,-c(5,6)]
t1 = sheet2[,c(1,2,4)] %>%
setNames(c("Glomerulus", "LM", "EM")) %>%
melt(id.vars="Glomerulus", variable.name="modality", value.name="PN_counts")
t2 = sheet2[,c(1,3)] %>%
setNames(c("Glomerulus", "LM")) %>%
mutate("EM"=0) %>%
melt(id.vars="Glomerulus", variable.name="modality", value.name="SD")
t3 = inner_join(t1,t2)
# y=PN_counts, ymin=PN_counts-SD, ymax=PN_counts+SD
p <- ggplot(t3, aes(x=Glomerulus, y=PN_counts, fill=modality)) +
geom_errorbar(aes(ymin=PN_counts-SD, ymax=PN_counts+SD, alpha=modality), position="dodge", width=0.5) +
geom_bar(position="dodge", stat="identity", width = 0.5) +
scale_y_continuous(breaks=scales::pretty_breaks(10), expand=c(0,0), limits = c(0,10)) +
xlab("glomeruli") +
ylab("Number of PNs") +
scale_alpha_manual(values = c("LM"=0.6, "EM"=0), guide='none') +
theme(legend.title = element_blank(),
text=element_text(size=36),
plot.background = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
axis.line = element_line(),
axis.ticks.x = element_blank(),
legend.position = c(.95, .9),
legend.text=element_text(size=20),
axis.text.x=element_text(angle=90, vjust = 0.25),
plot.margin=unit(c(0.8,.8,.8,.8),"cm"))
p
getwd()
ggsave("170518-pn_counts_per_glom_EMvsLM_vText.pdf", scale=1.2, width = 20, height = 6)
